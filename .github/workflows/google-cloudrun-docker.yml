name: 'Build and Deploy Postgres to Cloud Run'

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }} # Google Cloud project IDs
  REGION: ${{ secrets.REGION }} # Google Cloud region
  SERVICE_EMAIL: ${{ secrets.SERVICE_EMAIL }} # Service account email
  WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }} # Workload Identity Provider
  GAR_REPOSITORY_NAME: ${{ secrets.REPOSITORY_NAME }} # Artifact Registry repository

  POSTGRES_SERVICE: 'postgres-service' # Cloud Run service name
  BACKEND_SERVICE: 'backend-service' # Cloud Run service name
  WEB_SERVICE: 'web-service' # Cloud Run service name

  POSTGRES_IMAGE: 'postgres-image' # Docker image name
  BACKEND_IMAGE: 'backend-image'
  WEB_IMAGE: 'web-image'

  POSTGRES_USER: 'wifi' # Database username
  POSTGRES_PASSWORD: 'wifi' # Database password
  POSTGRES_DB: 'wifi' # Database name

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: '${{ env.PROJECT_ID }}'
          service_account: '${{ env.SERVICE_EMAIL }}'
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'

      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.auth_token }}'
          registry: '${{ env.REGION }}-docker.pkg.dev'

      # Build and deploy the BACKEND service to Cloud Run
      - name: 'Build and Push Image to Artifact Registry'
        run: |-
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/rpi-hub-438905/${{ env.GAR_REPOSITORY_NAME }}/${{ env.BACKEND_IMAGE }}:${{ github.sha }}"
          docker build -f apps/backend/Dockerfile apps/backend/ -t "${DOCKER_TAG}"
          gcloud auth configure-docker '${{ env.REGION }}-docker.pkg.dev'
          docker push "${DOCKER_TAG}"

      - name: 'Deploy to Cloud Run'
        run: |
          gcloud run deploy "${{ env.BACKEND_SERVICE }}" \
          --image "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY_NAME }}/${{ env.BACKEND_IMAGE }}:${{ github.sha }}" \
          --update-labels managed-by=github-actions,commit-sha="${{ github.sha }}" \
          --region "${{ env.REGION }}" \
          --service-account "${{ env.SERVICE_EMAIL }}" \
          --allow-unauthenticated \
          --add-cloudsql-instances postgresql \
          --set-env-vars INSTANCE_UNIX_SOCKET="/cloudsql/postgresql" \
          --set-env-vars INSTANCE_CONNECTION_NAME="postgresql" \
          --set-env-vars DB_NAME="wifi" \
          --set-env-vars DB_USER="wifi" \
          --set-env-vars DB_PASS="9DPx*:O=S3rDL.:l"

      - name: 'Show output'
        run: |
          echo "Cloud Run service deployed to:"
          echo "${{ steps.deploy.outputs.url }}"

      # Build and deploy the WEB service to Cloud Run
      - name: 'Build and Push Image to Artifact Registry'
        run: |-
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/rpi-hub-438905/${{ env.GAR_REPOSITORY_NAME }}/${{ env.WEB_IMAGE }}:${{ github.sha }}"  
          docker build apps/web/ -t "${DOCKER_TAG}"
          gcloud auth configure-docker '${{ env.REGION }}-docker.pkg.dev'
          docker push "${DOCKER_TAG}"

      - name: 'Deploy to Cloud Run'
        run: |
          gcloud run deploy "${{ env.WEB_SERVICE }}" \
          --image "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY_NAME }}/${{ env.WEB_IMAGE }}:${{ github.sha }}" \
          --update-labels managed-by=github-actions,commit-sha="${{ github.sha }}" \
          --region "${{ env.REGION }}" \
          --service-account "${{ env.SERVICE_EMAIL }}" \
          --allow-unauthenticated

      - name: 'Show output'
        run: |
          echo "Cloud Run service deployed to:"
          echo "${{ steps.deploy.outputs.url }}"
